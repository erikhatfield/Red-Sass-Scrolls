$_section-count: 8;

/*
**(_COLORS:)_								*/
$base-color: #fff;
$verbose-base: #ff0000;
$grid-color: rgba(133, 33, 33, .33);
//spectrum end-points (left and right)
$spectrum-left: #000;
$spectrum-right: #fff;

/*
**(_CUBIC BEZIER EASING CURVES:)_			*/
$time: 3300ms;
$super-ease-o: cubic-bezier(.11,1,.33,1);

/*
**(_GRID SPECS:)_			*/
$grid-sq: 1.420em;
$grid-stroke: .1em;
$grid-size: 177vmax;
$grid-z: $grid-sq * 5;
$grid-gradient: $grid-color $grid-stroke, transparent 0;
$grid-vertical-gradient: rgba(255, 255, 255, 0) 0, darken($verbose-base, 7%) 100%;

%relatively-common {
	display: block;
	position: relative;
	width: 100%;
}

#nonScroll {
	position: fixed;
	width: 100%;
	overflow: hidden;
	margin: 0;
	height: 100vh;
	perspective: 65em;
	perspective-origin: 50% calc(50% - 11em);
	background: $base-color;
	//background-color: darken($verbose-base, 11%);
}

#nonScroll div {
	position: absolute;
	top: 50%; left: 50%;
	transform-style: preserve-3d;
}

.grid-3d {
	transform: rotateY(-45deg) translate3d(-8*$grid-sq, $grid-sq, -2*$grid-sq);
}

.horizon {
	margin: -.5*$grid-size;
	width: $grid-size; height: $grid-size;
	transform: 
		rotateX(90deg) translateZ(-.5*$grid-z);
	background: 
		radial-gradient(rgba(255, 255, 255, 0) 34%, $base-color 77%), 
		linear-gradient($grid-gradient), 
		linear-gradient(90deg, $grid-gradient), 
		linear-gradient(135deg, $grid-vertical-gradient);
	background-position: 50% 50%;
	background-size: 100%, $grid-sq $grid-sq, $grid-sq $grid-sq, 100%;
}

#mainScrolls {
	@extend %relatively-common;
	z-index: 1;
	overflow-x: hidden;
}

#mainScrolls > section {
	@extend %relatively-common;
	z-index: 3;
	background-color: $spectrum-right;
	height: auto;
	min-height: 100vh;
}


#mainScrolls > section > div,
#mainScrolls > section > div > div {
	position: absolute;
	display: block;
	top: 0;
	bottom: 0;
	width: 100%;
	pointer-events: none;
}

#mainScrolls > section > div {
	height: 100%;
	z-index: -2;
	display:none;
}

#mainScrolls > section.active > div,
#mainScrolls > section.active-next > div {
	display: block;
}

#mainScrolls > section > div > div {
	top: 0;
	width: 25%;
	left: 25%;
	background: transparent;
	-webkit-transition:top $time $super-ease-o;
	transition:top $time $super-ease-o;
}

@for $i from 1 through 4 {
	#mainScrolls > section > div > div:nth-child(#{$i}) {
		left: ($i - 1) * 25%;
	}
}

#mainScrolls > section.active {
	border-bottom: 1px dashed transparentize($verbose-base, .5);
}

#mainScrolls > section.active-next {
	border-bottom: 1px dotted transparentize($verbose-base, .5);
}

#mainScrolls > section::after {
	bottom: 15%;
	width: 23%;
	text-align: right;
	display: block;
	left: 1%;
	position: absolute;
}

$inverted: $spectrum-left;
@for $i from 1 through $_section-count {
	$inverted: invert($inverted);

	#mainScrolls > section:nth-child(#{$i}) {//use nth-child mod operator or even/odd prop instead- self
		background-color: desaturate($inverted, 50%);
		color: desaturate(invert($inverted), 50%);
	}

	#mainScrolls > section:nth-child(#{$i}) > div > div {
		background-color: desaturate($inverted, 50%);
		border-right: 1px dotted transparentize(desaturate(invert($inverted), 50%), .9);
	}

	#mainScrolls > section:nth-child(#{$i})::after {
		content: '.0#{$i}^ ';
		font-size: ((.05 * $i) * 11em);
	}
}

#mainScrolls > section:nth-child(1) {
	background-color: transparent;
}

.article {
	top: 0;
	position: relative;
	z-index: 11;
	margin: 0;
	padding: 5% 12.5% 37.5%;
	-webkit-transition: top $time $super-ease-o;
	transition: top $time $super-ease-o;
}

.center-stage {
	text-align: center;
}

.figure {
	display: inline-block;
	position: relative;
	padding: 5%;
	margin: 10% 0;
	border: 1px solid transparentize($spectrum-left, .86);
	background: $spectrum-right;
	text-align: center;
}

.figure::before {
	content: ' ';
	position: absolute;
	z-index: -1;
	display:block;
	width: 300%;
	left: -100%;
	height: 1%;
	top: 77%;
	background: transparent;
	border: 1px solid transparentize($spectrum-left, .86);
	border-left: 0;
	border-right: 0;
}

.figure img {
	width: 50%;
	height: auto;
}

//scrollVisualizer
#scrollVisualizer {
	position: fixed;
	display: block;
	z-index: 101;
	top: 0;
	left: 0;
	bottom: 0;
	min-width: 4px;
	width: .5%;
	height: 100%;
	background-color: transparentize($verbose-base, .420);
}

#scrollVisualizer > div {
	@extend %relatively-common;
	height: 11px;
	overflow: hidden;
	background-color: transparentize($base-color, .33);
	border-bottom: 1px solid transparentize($spectrum-left, .11);
}

@for $i from 1 through $_section-count {
	#scrollVisualizer > div:nth-child(#{$i}) {//use nth-child mod operator to recycle styles
		opacity: ($i * .07);
	}
}

#scrollLocation {
	background-color: transparentize($verbose-base, .4);
	border: 1px solid transparentize(darken($spectrum-right, 33%), .5);
	border-radius: 0 33px;
	display: block;
	height: 33px;
	left: 25%;
	position: absolute;
	top: 50%;
	width: 150%;
}

//verbose scroll event data reader
#verboseReader {
	background: $verbose-base;
	bottom: 0;
	display: block;
	min-width: 160px;
	position: fixed;
	right: 0;
	top: 0;
	width: 20%;
	z-index: 101;
}

#verboseReader > section {
	background: $verbose-base;
	border: 3px dotted $spectrum-left;
	left: 5%;
	padding: 5%;
	position: fixed;
	top: 5%;
	transform: scale(.16);
	transform-origin: 100% 0;
	width: 90%;
}

@for $i from 1 through 3 {

	#verboseReader > section:nth-child(#{$i}) {
		top: ($i * 20%);
	}
}

#verboseReader > section h2 {
	font-size: 3rem;
	margin: 0;
}

#verboseReader > section.read {
	border: 1px dotted $spectrum-right;
	height: 90%;
	overflow-y: scroll;
	top: 5%;
	transform: scale(1);
}
